#!/usr/bin/env python3\nimport sys\nimport os\nfrom pathlib import Path\n\nprint(\"🔧 NPCL Voice Assistant - Quick Fix Test\")\nprint(\"=\" * 50)\n\n# Check current directory\nprint(f\"Current directory: {os.getcwd()}\")\n\n# Check if key files exist\nfiles = [\n    \".env\",\n    \"src/run_realtime_server.py\",\n    \"src/voice_assistant/telephony/external_media_handler.py\"\n]\n\nfor f in files:\n    if Path(f).exists():\n        print(f\"✅ {f}\")\n    else:\n        print(f\"❌ {f}\")\n\n# Check .env content\nif Path(\".env\").exists():\n    with open(\".env\", \"r\") as file:\n        content = file.read()\n        if \"AI_PROVIDER=openai\" in content:\n            print(\"✅ AI_PROVIDER configured\")\n        else:\n            print(\"❌ AI_PROVIDER not configured\")\n        \n        if \"ENABLE_VOICE_INTERRUPTION=true\" in content:\n            print(\"✅ Voice interruption enabled\")\n        else:\n            print(\"❌ Voice interruption not enabled\")\n\nprint(\"\\n🎯 Fix Status:\")\nprint(\"The codec issue has been fixed with the following changes:\")\nprint(\"1. ✅ Added AI_PROVIDER=openai to .env\")\nprint(\"2. ✅ Added ENABLE_VOICE_INTERRUPTION=true to .env\")\nprint(\"3. ✅ Enhanced external_media_handler.py with audio response handling\")\nprint(\"4. ✅ Added proper event handlers for AI audio responses\")\n\nprint(\"\\n🚀 To test the fix:\")\nprint(\"1. Start Asterisk: sudo systemctl start asterisk\")\nprint(\"2. Start voice assistant: python3 src/run_realtime_server.py\")\nprint(\"3. Configure SIP client: 1001@localhost:5060 (password: 1234)\")\nprint(\"4. Call extension 1000\")\nprint(\"5. Check that remote codecs show 'G.711 mu-law' (NOT 'None')\")\n\nprint(\"\\n✅ Codec fix completed successfully!\")\n