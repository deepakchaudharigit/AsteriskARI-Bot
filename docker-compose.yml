services:
  # NPCL Voice Assistant
  npcl-voice-assistant:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: npcl-voice-assistant
    restart: unless-stopped
    ports:
      - "8000:8000"    # ARI Server
      - "8090:8090"    # External Media
    environment:
      # OpenAI Configuration (REQUIRED)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Voice Configuration
      - VOICE_MODEL=alloy
      - TTS_MODEL=tts-1-hd
      - SPEECH_MODEL=whisper-1
      
      # Audio Configuration
      - SAMPLE_RATE=16000
      - CHUNK_SIZE=1024
      - CHANNELS=1
      - AUDIO_FORMAT=slin16
      
      # Asterisk ARI Configuration
      - ARI_BASE_URL=http://asterisk:8088/ari
      - ARI_USERNAME=asterisk
      - ARI_PASSWORD=1234
      - STASIS_APP=openai-voice-assistant
      
      # External Media Configuration
      - EXTERNAL_MEDIA_HOST=0.0.0.0
      - EXTERNAL_MEDIA_PORT=8090
      
      # Assistant Configuration
      - ASSISTANT_NAME=NPCL Assistant
      - VOICE_LANGUAGE=en
      - LOG_LEVEL=INFO
      
      # Performance Settings
      - ENABLE_INTERRUPTION_HANDLING=true
      - MAX_CALL_DURATION=3600
      - AUTO_ANSWER_CALLS=true
    volumes:
      - ./sounds:/app/sounds
      - ./recordings:/app/recordings
      - ./logs:/app/logs
    # Note: Audio device mapping removed for macOS compatibility
    # Audio processing will be handled through network/API calls
    networks:
      - npcl-network
    depends_on:
      - asterisk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ari/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Asterisk 20 LTS PBX
  asterisk:
    build:
      context: .
      dockerfile: docker/Dockerfile.asterisk20
    image: npcl-asterisk:20
    container_name: npcl-asterisk-20
    restart: unless-stopped
    ports:
      - "5060:5060/udp"    # SIP UDP
      - "5060:5060/tcp"    # SIP TCP
      - "8088:8088"        # ARI HTTP
      - "20000-20100:20000-20100/udp"  # RTP Range
    volumes:
      - ./asterisk-config:/etc/asterisk
      - ./sounds:/var/lib/asterisk/sounds/custom
      - asterisk-logs:/var/log/asterisk
      - asterisk-spool:/var/spool/asterisk
      - asterisk-lib:/var/lib/asterisk
    environment:
      - ASTERISK_VERSION=20
      - ASTERISK_UID=1000
      - ASTERISK_GID=1000
      - TZ=UTC
    command: [
      "asterisk",
      "-f",           # Run in foreground
      "-vvv",         # Verbose logging
      "-dddd",        # Debug level
      "-c"            # Console mode
    ]
    networks:
      - npcl-network
    healthcheck:
      test: ["CMD", "asterisk", "-rx", "core show version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis (for session management)
  redis:
    image: redis:7-alpine
    container_name: npcl-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - npcl-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring (optional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: npcl-portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - npcl-network

volumes:
  asterisk-logs:
  asterisk-spool:
  asterisk-lib:
  redis-data:
  portainer-data:

networks:
  npcl-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16