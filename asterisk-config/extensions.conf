[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
; Global variables for the NPCL Telephonic Bot
OPENAI_APP=openai-voice-assistant
EXTERNAL_MEDIA_HOST=localhost
EXTERNAL_MEDIA_PORT=8090

[openai-voice-assistant]
; Main NPCL Telephonic Bot Extension
exten => 1000,1,NoOp(NPCL Telephonic Bot - Main Line)
same => n,Set(CHANNEL(hangup_handler_push)=hangup-handler,s,1)
same => n,Answer()
same => n,Set(TALK_DETECT(set)=4,160)  ; Enable talk detection
same => n,Wait(1)  ; Brief pause to establish media
same => n,Playback(/home/ameen/AsteriskARI-Bot/sounds/welcome)  ; Play welcome greeting
same => n,Wait(1)  ; Brief pause after welcome
same => n,Stasis(${OPENAI_APP},${CALLERID(num)},${EXTEN})
same => n,Hangup()

; Test Extensions (IMPORTANT: These need to be in the same context)
exten => 1010,1,NoOp(Codec Test - No Stasis)
same => n,Answer()
same => n,Wait(2)
same => n,Playback(demo-congrats)
same => n,Wait(5)
same => n,Hangup()

exten => 9000,1,NoOp(Echo Test)
same => n,Answer()
same => n,Echo()
same => n,Hangup()

; Customer Service Queue
exten => 1001,1,NoOp(NPCL Customer Service Queue)
same => n,Answer()
same => n,Playback(welcome)
same => n,Queue(customer-service,t,,,300)
same => n,Hangup()

; Technical Support Queue
exten => 1002,1,NoOp(NPCL Technical Support Queue)
same => n,Answer()
same => n,Playback(technical-support)
same => n,Queue(technical-support,t,,,300)
same => n,Hangup()

; Billing Department
exten => 1003,1,NoOp(NPCL Billing Department)
same => n,Answer()
same => n,Playback(billing-department)
same => n,Queue(billing,t,,,300)
same => n,Hangup()

; Emergency Power Outage Reporting
exten => 1004,1,NoOp(NPCL Emergency Outage Reporting)
same => n,Answer()
same => n,Playback(emergency-outage)
same => n,Stasis(${OPENAI_APP},${CALLERID(num)},emergency)
same => n,Hangup()

; IVR Main Menu
exten => 1005,1,NoOp(NPCL IVR Main Menu)
same => n,Answer()
same => n,Background(npcl-main-menu)
same => n,WaitExten(10)
same => n,Goto(1000,1)  ; Default to main bot

; IVR Menu Options
exten => 1,1,Goto(1000,1)  ; AI Assistant
exten => 2,1,Goto(1001,1)  ; Customer Service
exten => 3,1,Goto(1002,1)  ; Technical Support
exten => 4,1,Goto(1003,1)  ; Billing
exten => 9,1,Goto(1004,1)  ; Emergency

; Call Transfer Extensions
exten => 2000,1,NoOp(Transfer to Agent)
same => n,Dial(PJSIP/agent1,30)
same => n,Hangup()

exten => 2001,1,NoOp(Transfer to Supervisor)
same => n,Dial(PJSIP/supervisor,30)
same => n,Hangup()

; Conference Rooms
exten => 3000,1,NoOp(Customer Conference)
same => n,Answer()
same => n,ConfBridge(customer-conf)
same => n,Hangup()

exten => 3001,1,NoOp(Agent Conference)
same => n,Answer()
same => n,ConfBridge(agent-conf)
same => n,Hangup()

; Recording Test
exten => 9001,1,NoOp(Recording Test)
same => n,Answer()
same => n,Playback(beep)
same => n,Record(test-recording:wav,10,k)
same => n,Playback(test-recording)
same => n,Hangup()

; Emergency fallback for any other extension
exten => _X.,1,NoOp(Fallback for ${EXTEN})
same => n,Answer()
same => n,Playback(invalid)
same => n,Wait(1)
same => n,Goto(1005,1)  ; Redirect to IVR

; Hangup handler for cleanup and data logging
[hangup-handler]
exten => s,1,NoOp(Hangup handler for ${CHANNEL})
same => n,System(echo "Call ended: ${CHANNEL} at $(date) - Duration: ${CDR(duration)}s" >> /var/log/asterisk/npcl-calls.log)
same => n,AGI(call-data-logger.py,${CALLERID(num)},${EXTEN},${CDR(duration)})
same => n,Return()

[default]
include => openai-voice-assistant

; Inbound context for SIP calls
[from-sip]
include => openai-voice-assistant

; Context for internal calls
[internal]
include => openai-voice-assistant
