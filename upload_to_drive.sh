#!/bin/bash\n\n# NPCL Voice Assistant - Safe Drive Upload Script\n# This script creates a clean copy for upload while keeping the original running\n\necho \"🚀 NPCL Voice Assistant - Drive Upload Preparation\"\necho \"================================================\"\n\n# Create upload directory\nUPLOAD_DIR=\"NPCL-Asterisk-ARI-Assistant-Upload\"\necho \"📁 Creating clean copy: $UPLOAD_DIR\"\n\n# Remove existing upload directory if it exists\nif [ -d \"$UPLOAD_DIR\" ]; then\n    rm -rf \"$UPLOAD_DIR\"\nfi\n\n# Copy project (excluding sensitive/unnecessary files)\necho \"📋 Copying project files...\"\ncp -r NPCL-Asterisk-ARI-Assistant \"$UPLOAD_DIR\"\n\n# Navigate to upload directory\ncd \"$UPLOAD_DIR\"\n\n# Remove sensitive and unnecessary files\necho \"🧹 Cleaning sensitive and unnecessary files...\"\nrm -rf .venv/\nrm -rf __pycache__/\nrm -rf .pytest_cache/\nrm -rf node_modules/\nfind . -name \"*.pyc\" -delete\nfind . -name \"*.pyo\" -delete\nfind . -name \"*.log\" -delete\nfind . -name \".DS_Store\" -delete\n\n# Handle sensitive files\nif [ -f \".env\" ]; then\n    echo \"⚠️  Removing .env file (contains API keys)\"\n    rm .env\nfi\n\n# Create .env.example if it doesn't exist\nif [ ! -f \".env.example\" ]; then\n    echo \"📝 Creating .env.example template\"\n    cat > .env.example << 'EOF'\n# AI Provider Configuration\nAI_PROVIDER=openai\n\n# OpenAI API Configuration (REQUIRED)\nOPENAI_API_KEY=your-openai-api-key-here\nOPENAI_MODEL=gpt-4o-mini\nOPENAI_REALTIME_MODEL=gpt-4o-realtime-preview-2024-10-01\n\n# Voice Configuration\nVOICE_MODEL=alloy\nOPENAI_VOICE=alloy\n\n# Asterisk ARI Configuration\nARI_BASE_URL=http://localhost:8088/ari\nARI_USERNAME=asterisk\nARI_PASSWORD=1234\nSTASIS_APP=openai-voice-assistant\n\n# External Media Configuration\nEXTERNAL_MEDIA_HOST=localhost\nEXTERNAL_MEDIA_PORT=8090\n\n# System Configuration\nLOG_LEVEL=INFO\nENABLE_VOICE_INTERRUPTION=true\nEOF\nfi\n\n# Go back to parent directory\ncd ..\n\n# Create compressed archive\necho \"📦 Creating compressed archive...\"\nzip -r \"NPCL-Asterisk-ARI-Assistant-$(date +%Y%m%d).zip\" \"$UPLOAD_DIR/\" > /dev/null\n\n# Show summary\necho \"\"\necho \"✅ Upload preparation complete!\"\necho \"================================================\"\necho \"📁 Clean copy created: $UPLOAD_DIR/\"\necho \"📦 Compressed archive: NPCL-Asterisk-ARI-Assistant-$(date +%Y%m%d).zip\"\necho \"\"\necho \"🔒 Security notes:\"\necho \"   - .env file removed (contains API keys)\"\necho \"   - Virtual environment (.venv) excluded\"\necho \"   - Cache files cleaned\"\necho \"\"\necho \"📤 Ready for upload to Google Drive!\"\necho \"   - Upload the ZIP file or the folder\"\necho \"   - Your running project is unaffected\"\necho \"\"\necho \"🔄 To restore on new system:\"\necho \"   1. Download and extract\"\necho \"   2. Copy .env.example to .env\"\necho \"   3. Add your OpenAI API key\"\necho \"   4. Follow linux_asterisk_guideline.md\"\necho \"\"\n\n# Show file sizes\necho \"📊 File sizes:\"\necho \"   Original project: $(du -sh NPCL-Asterisk-ARI-Assistant | cut -f1)\"\necho \"   Clean copy: $(du -sh $UPLOAD_DIR | cut -f1)\"\necho \"   Compressed: $(du -sh NPCL-Asterisk-ARI-Assistant-$(date +%Y%m%d).zip | cut -f1)\"\n"